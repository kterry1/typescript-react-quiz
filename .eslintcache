[{"C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\index.tsx":"1","C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\App.tsx":"2","C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\API.ts":"3","C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\App.styles.ts":"4","C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\components\\QuestionCard.tsx":"5","C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\utils.ts":"6","C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\components\\QuestionCard.styles.ts":"7"},{"size":209,"mtime":1615656976791,"results":"8","hashOfConfig":"9"},{"size":2720,"mtime":1615656976733,"results":"10","hashOfConfig":"9"},{"size":853,"mtime":1615656976732,"results":"11","hashOfConfig":"9"},{"size":1701,"mtime":1615656976733,"results":"12","hashOfConfig":"9"},{"size":1235,"mtime":1615656976736,"results":"13","hashOfConfig":"9"},{"size":105,"mtime":1615656976792,"results":"14","hashOfConfig":"9"},{"size":1273,"mtime":1615656976735,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"uznjtf",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\index.tsx",[],["33","34"],"C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\App.tsx",["35"],"import React, {useState} from 'react';\r\nimport QuestionCard from './components/QuestionCard';\r\nimport {fetchQuizQuestions, QuestionState, Difficulty, Question} from './API';\r\n\r\n// Styles \r\nimport {GlobalStyle, Wrapper} from './App.styles'\r\n\r\nexport type AnswerObject = {\r\n  question: string;\r\n  answer: string;\r\n  correct: boolean;\r\n  correctAnswer: string;\r\n}\r\n\r\nconst TOTAL_QUESTIONS = 10;\r\n\r\nconst App: React.FC = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\r\n  const [number, setNumber] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(true);\r\n\r\n  const startTrivia = async () => {\r\n    setLoading(true);\r\n    setGameOver(false);\r\n\r\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\r\n    setQuestions(newQuestions);\r\n    setScore(0);\r\n    setUserAnswers([]);\r\n    setNumber(0);\r\n    setLoading(false);\r\n  }\r\n\r\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    if(!gameOver) {\r\n      const answer = e.currentTarget.value;\r\n      const correct = questions[number].correct_answer === answer;\r\n    if(correct) setScore(prevScore => prevScore + 1);\r\n    const answerObject = {\r\n      question: questions[number].question,\r\n      answer,\r\n      correct,\r\n      correctAnswer: questions[number].correct_answer\r\n    };\r\n\r\n    setUserAnswers(prev => [...prev, answerObject])\r\n    }\r\n  }\r\n\r\n  const nextQuestion = () => {\r\n    const nextQuestion = number + 1;\r\n    if(nextQuestion === TOTAL_QUESTIONS) {\r\n      setGameOver(true);\r\n    } else {\r\n      setNumber(nextQuestion);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <GlobalStyle/>\r\n    <Wrapper>\r\n      <h1>REACT QUIZ</h1>\r\n      {(gameOver || userAnswers.length === TOTAL_QUESTIONS) && (\r\n      <button className=\"start\" onClick={startTrivia}>\r\n        Start\r\n      </button>\r\n      )\r\n      }\r\n      {!gameOver && <p className=\"score\">Score: {score}</p>}\r\n      {loading && <p className=\"loading\">Loading Questions...</p>}\r\n        {(!loading && !gameOver) && (\r\n        <QuestionCard \r\n        questionNmbr={number + 1} \r\n        totalQuestions={TOTAL_QUESTIONS}\r\n        question={questions[number].question}\r\n        answers={questions[number].answers}\r\n        userAnswer={userAnswers ? userAnswers[number] : undefined}\r\n        callback={checkAnswer}\r\n        />\r\n      )}\r\n      {(!gameOver && !loading && number !== TOTAL_QUESTIONS - 1) && (\r\n      <button className=\"next\" onClick={nextQuestion}>\r\n        Next Question\r\n      </button>\r\n      )}\r\n    </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\API.ts",[],"C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\App.styles.ts",[],"C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\components\\QuestionCard.tsx",[],"C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\utils.ts",[],"C:\\Users\\kterr\\OneDrive\\Desktop\\complete-javascript-course\\typescript-react-quiz\\src\\components\\QuestionCard.styles.ts",["36"],"import styled from 'styled-components';\r\nimport { isConstructorDeclaration } from 'typescript';\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: 1100px;\r\n    background: #ebfeff;\r\n    border-radius: 10px;\r\n    border: 2px solid #0085a3;\r\n    padding: 20px;\r\n    box-shadow: 0px 5px 10px rgba(0,0,0,0.25);\r\n    text-align: center;\r\n\r\n    p {\r\n        font-size: 1rem;\r\n    }\r\n`;\r\n\r\ntype ButtonWrapperProps = {\r\n    correct: boolean;\r\n    userClicked: boolean\r\n}\r\n\r\nexport const ButtonWrapper = styled.div<ButtonWrapperProps>`\r\n    transition: all 0.3s ease;\r\n\r\n    :hover {\r\n        opacity: 0.8;\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n        user-select: none;\r\n        font-size: 0.8rem;\r\n        width: 100%;\r\n        height: 40px;\r\n        margin: 5px 0;\r\n        background: ${({correct, userClicked}) => \r\n            correct ? `linear-gradient(90deg, #56ffa4, #59bc86)`\r\n            : !correct && userClicked\r\n            ? `linear-gradient(90deg, #ff5656, #c16868)`\r\n            : `linear-gradient(90deg, #56ccff, #6eafb4)`         \r\n            };\r\n        border: 3px solid #fff;\r\n        box-shadow: 1px 2px 0px rgba(0,0,0, 0.1);\r\n        border-radius: 10px;\r\n        color: #fff;\r\n        text-shadow: 0px 1px 0px rgba(0,0,0,0.25);\r\n    }\r\n\r\n`;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":56,"nodeType":"43","messageId":"44","endLine":3,"endColumn":64},{"ruleId":"41","severity":1,"message":"45","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":34},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"@typescript-eslint/no-unused-vars","'Question' is defined but never used.","Identifier","unusedVar","'isConstructorDeclaration' is defined but never used.","no-global-assign","no-unsafe-negation"]